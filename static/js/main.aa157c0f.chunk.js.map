{"version":3,"sources":["vipmap/index.js","vipmap/store/actionCreators.js","vipmap/store/constants.js","vipmap/store/reducer.js","store/reducer.js","store/index.js","index.js"],"names":["VipMap","this","props","list","handleClick","srcList","currentCity","currentZoom","style","width","height","margin","border","marginTop","Object","keys","map","item","index","onClick","key","akay","zoom","center","enableScrollWheelZoom","changeCityList","Component","connect","state","getIn","dispatch","url","window","location","href","axios","get","then","res","data","result","i","length","city","push","type","cityList","srcCityList","InitCityList","catch","console","log","action","changeCurrentCity","defaultState","fromJS","merge","initCityList","reducer","combineReducers","vipmap","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"8RAMMA,E,uKAEM,IAAD,EACuDC,KAAKC,MAA5DC,EADA,EACAA,KAAcC,GADd,EACKC,QADL,EACcD,aAAaE,EAD3B,EAC2BA,YAAaC,EADxC,EACwCA,YAE/C,OACE,6BACE,yBAAKC,MAAO,CAACC,MAAO,MAAOC,OAAQ,OAAQC,OAAQ,SAAUC,OAAQ,iBAAkBC,UAAW,SAE9FC,OAAOC,KAAKZ,GAAMa,KAAI,SAACC,EAAMC,GAE3B,OAAO,4BACLC,QAAS,kBAAMf,EAAY,CAACa,QAAM,KAClCG,IAAKF,GAAQD,MAKnB,4BAAQE,QAAS,kBAAMf,EAAY,eAAM,KAAzC,gBACCG,EACAD,GAGH,yBAAKE,MAAO,CAACC,MAAO,MAAOC,OAAQ,QAASC,OAAQ,SAAUC,OAAQ,iBAAkBC,UAAW,QACjG,kBAAC,IAAD,CAAWQ,KAAK,oCACd,kBAAC,IAAD,CACEC,KAAMf,EACND,YAAaA,EACbiB,OAAQjB,EACRkB,uBAAuB,S,0CAUjCvB,KAAKC,MAAMuB,qB,GAvCMC,aA6ENC,eAhCE,SAACC,GAChB,MAAO,CACLzB,KAAMyB,EAAMC,MAAM,CAAC,SAAS,aAC5BxB,QAASuB,EAAMC,MAAM,CAAC,SAAS,gBAC/BvB,YAAasB,EAAMC,MAAM,CAAC,SAAS,gBACnCtB,YAAaqB,EAAMC,MAAM,CAAC,SAAS,oBAKnB,SAACC,GACnB,MAAO,CAELL,eAFK,WAGHK,GC9BG,SAACA,GAEN,IAAIC,EAAMC,OAAOC,SAASC,KAC1BC,IAAMC,IAAIL,EAAM,cAAcM,MAAK,SAACC,GAClCR,EA9BsB,SAACS,GAI3B,IADA,IAAIC,EAAS,GACHC,EAAE,EAAGA,EAAEF,EAAKG,OAAQD,IAAI,CAChC,IAAIE,EAAOJ,EAAKE,GAAGE,KACfA,KAAQH,EACVA,EAAOG,GAAMC,KAAKL,EAAKE,IAEvBD,EAAOG,GAAQ,CAACJ,EAAKE,IAIzB,MAAO,CACLI,KCtB0B,wBDuB1BC,SAAUN,EACVO,YAAaR,GAcFS,CAAaV,EAAIC,KAAKA,UAC5BU,OAAM,WACPC,QAAQC,IAAI,gBD4BhB/C,YAPK,SAOOuC,EAAMrB,GAEI,kBAATqB,IACTA,EAAOA,EAAK1B,MAGd,IAAMmC,ECxEqB,SAACT,EAAMrB,GAAP,MAAiB,CAChDuB,KCFiC,6BDGjCvC,YAAaqC,EACbpC,YAAae,GDqEM+B,CAAkBV,EAAMrB,GACvCQ,EAASsB,OAOAzB,CAA+B3B,G,8BGhFxCsD,EAAeC,iBAAO,CAC1BT,SAAU,GACVC,YAAa,GAEbzC,YAAa,eACbC,YAAa,KAIT8C,EAAoB,SAACzB,EAAOwB,GAChC,IAAIZ,EAAS,CACX,YAAeY,EAAO9C,YACtB,YAAe8C,EAAO7C,aAExB,OAAOqB,EAAM4B,MAAMhB,IAGfiB,EAAe,SAAC7B,EAAOwB,GAC3B,OAAOxB,EAAM4B,MAAM,CACjBV,SAAUM,EAAON,SACjBC,YAAaK,EAAOL,eChBTW,EAJCC,0BAAgB,CAC/BC,OD0Bc,WAAmC,IAAlChC,EAAiC,uDAAzB0B,EAAcF,EAAW,uCAC/C,OAAOA,EAAOP,MACZ,ID/B0B,wBCgCxB,OAAOY,EAAa7B,EAAOwB,GAC7B,IDhC+B,6BCiC7B,OAAOC,EAAkBzB,EAAOwB,GAClC,QACE,OAAOxB,ME1BPiC,GADmB7B,OAAO8B,qCAAuC9B,OAAO8B,qCAAqC,IAAMC,KAExHC,YAAgBC,MASFC,EALDC,YACbT,EACAG,GCZKO,EAEJ,kBAAC,IAAD,CAAUF,MAAOA,GACf,kBAAC,EAAD,OAIJG,IAASC,OAAOF,EAAKG,SAASC,eAAe,W","file":"static/js/main.aa157c0f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {connect} from \"react-redux\"\n// import { useRef, useEffect, useState } from 'react';\nimport { Map, APILoader } from '@uiw/react-baidu-map';\nimport {getCityList, changeCurrentCity,} from \"./store/actionCreators\"\n\nclass VipMap extends Component {\n\n  render() {\n    const {list,srcList, handleClick, currentCity, currentZoom} = this.props;\n\n    return (\n      <div >\n        <div style={{width: '80%', height: 'auto', margin: '0 auto', border: '1px solid #000', marginTop: '50px'}}>\n          {\n            Object.keys(list).map((item, index) => {\n              // var city = item.city;\n              return <button\n                onClick={() => handleClick({item},13)}\n                key={index}>{item}\n              </button>\n            })\n\n          }\n          <button onClick={() => handleClick(\"北京\", 5)}>全国</button>\n          {currentZoom}\n          {currentCity}\n        </div>\n\n        <div style={{width: '80%', height: '700px', margin: '0 auto', border: '1px solid #000', marginTop: '2px',}}>\n          <APILoader akay=\"X3dS7gyDF4AFBDzF9wWcn3CY49Di4sYQ\">\n            <Map\n              zoom={currentZoom}\n              currentCity={currentCity}\n              center={currentCity}\n              enableScrollWheelZoom={true}\n            />\n          </APILoader>\n        </div>\n      </div>\n\n    )\n  }\n\n  componentDidMount() {\n    this.props.changeCityList();\n    // this.bindEvents();\n  }\n}\n\n// link 规则（方式）映射关系\nconst mapState = (state) => {\n  return {\n    list: state.getIn(['vipmap','cityList']),\n    srcList: state.getIn(['vipmap','srcCityList']),\n    currentCity: state.getIn(['vipmap','currentCity']),\n    currentZoom: state.getIn(['vipmap','currentZoom']),\n  }\n};\n\n// redux 数据修改逻辑映射 store.dispatch, props\nconst mapDispatch = (dispatch) => {\n  return {\n    // load city list\n    changeCityList(){\n      dispatch(getCityList())\n    },\n\n    // city btn click\n    handleClick(city, zoom) {\n\n      if (typeof city === 'object'){\n        city = city.item\n      }\n\n      const action = changeCurrentCity(city, zoom);\n      dispatch(action)\n    },\n\n  }\n};\n\n// 组件是通过connect获取到state的数据\nexport default connect(mapState, mapDispatch)(VipMap)\n","import axios from \"axios\"\nimport * as constants from './constants';\n\nexport const changeCurrentCity = (city, zoom) => ({\n  type: constants.CHANGE_CURRENT_CITY,\n  currentCity: city,\n  currentZoom: zoom,\n})\n\nexport const InitCityList = (data) => {\n\n  // 数据处理 原数据是data.json\n  var result = {};\n  for ( var i=0; i<data.length; i++){\n    var city = data[i].city;\n    if (city in result){\n      result[city].push(data[i])\n    }else {\n      result[city] = [data[i]]\n    }\n  }\n\n  return {\n    type: constants.INIT_CITY_LIST,\n    cityList: result,\n    srcCityList: data,\n  }};\n\nexport const changeCurrentZoom = (value) => ({\n  type: constants.CHANGE_CURRENT_ZOOM,\n  value,\n})\n\n// 使用了 redux-thunk 之后 返回可以是一个函数\nexport const getCityList = () => {\n  return (dispatch) => { // dispatch: 如果action是函数的话会自动接收到dispatch方法\n    // ajax request\n    var url = window.location.href\n    axios.get(url + \"/data.json\").then((res) => {\n      dispatch(InitCityList(res.data.data)) // action change store\n      }).catch(() => { // ajax request error\n        console.log(\"error\")\n    })\n  }\n}","\nexport const INIT_CITY_LIST = 'vipmap/INIT_CITY_LIST';\nexport const CHANGE_CURRENT_CITY = 'vipmap/CHANGE_CURRENT_CITY';\nexport const CHANGE_CURRENT_ZOOM = 'vipmap/CHANGE_CURRENT_ZOOM';","import * as constants from './constants';\nimport { fromJS} from 'immutable';\n\nconst defaultState = fromJS({\n  cityList: [],\n  srcCityList: [],\n  // currentCity: \"北京\",\n  currentCity: \"上海\",\n  currentZoom: 13,\n});\n\n\nconst changeCurrentCity = (state, action) => {\n  var result = {\n    \"currentCity\": action.currentCity,\n    \"currentZoom\": action.currentZoom,\n  }\n  return state.merge(result)\n}\n\nconst initCityList = (state, action) => {\n  return state.merge({\n    cityList: action.cityList,\n    srcCityList: action.srcCityList\n  })\n}\n\n// state    整个DOM的数据库\n// action\n// reducer 可以接收state，但是不可以在修改stacurrentCityte\nexport default (state = defaultState, action) => {\n  switch(action.type) {\n    case constants.INIT_CITY_LIST:\n      return initCityList(state, action)\n    case constants.CHANGE_CURRENT_CITY:\n      return changeCurrentCity(state, action)\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux-immutable';\nimport { reducer as vipmapReducer } from '../vipmap/store';\n\nconst reducer = combineReducers({\n\tvipmap: vipmapReducer,\n});\n\nexport default reducer;\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from \"./reducer\";\n\n/*\n  redux-sagas 中间件把异步放到单独的文件进行管理\n  redux-thunk 中间件把异步放到action中\n */\n\n// https://github.com/zalmoxisus/redux-devtools-extension/#12-advanced-store-setup\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(\n\tapplyMiddleware(thunk),\n\t// other store enhancers if any\n);\n\nconst store = createStore(\n\treducer,\n\tenhancer // redux 中间件\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\"\nimport VipMap from './vipmap';\nimport store from \"./store\";\n\nconst App = (\n  // 子组件可以使用store，都可以通过connect做连接\n  <Provider store={store}>\n    <VipMap/>\n  </Provider>\n)\n\nReactDOM.render(App, document.getElementById('root'));\n\n"],"sourceRoot":""}